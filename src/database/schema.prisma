// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// TODO: state || status

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @db.Uuid

  fullName String?  @map("full_name")
  phone    String   @unique
  balance  Float    @default(0)
  Wallets  Wallet[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()

  @@map("user")
}

model Otp {
  id Int @id @default(autoincrement())

  code        String
  phoneNumber String
  isUsed      Boolean  @default(true)
  expiresIn   DateTime @map("expiresIn") @db.Timestamp(5)

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  @@map("otp")
}

model Wallet {
  id String @id @default(uuid()) @db.Uuid

  type          walletType
  currency      String     @default("USD")
  invoiceNumber String     @map("invoice_number")
  user          User       @relation(fields: [userId], references: [id])
  userId        String     @db.Uuid

  createdAt DateTime? @default(now())
}

enum userStatus {
  NOT_VALIDATED
  VALIDATED
  DELETED
  BANNED
  TERMINATED
}

enum walletType {
  DEPOSIT
  WITHDRAW
}

enum productStatus {
  STOP_SELL
  SOLD_OUT
  FOR_SALE
}
